/**
 * This class is generated by jOOQ
 */
package io.github.ibuildthecloud.dstack.core.model.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "image_storage_pool_map", schema = "dstack")
public class ImageStoragePoolMapRecord extends org.jooq.impl.UpdatableRecordImpl<io.github.ibuildthecloud.dstack.core.model.tables.records.ImageStoragePoolMapRecord> implements io.github.ibuildthecloud.dstack.db.jooq.utils.TableRecordJaxb, org.jooq.Record9<java.lang.Long, java.lang.Long, java.lang.Long, java.lang.String, java.lang.String, java.util.Date, java.util.Date, java.util.Date, java.lang.Boolean>, io.github.ibuildthecloud.dstack.core.model.ImageStoragePoolMap {

	private static final long serialVersionUID = -1993984399;

	/**
	 * Setter for <code>dstack.image_storage_pool_map.id</code>.
	 */
	@Override
	public void setId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>dstack.image_storage_pool_map.id</code>.
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "id", unique = true, nullable = false, precision = 19)
	@Override
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>dstack.image_storage_pool_map.image_id</code>.
	 */
	@Override
	public void setImageId(java.lang.Long value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>dstack.image_storage_pool_map.image_id</code>.
	 */
	@javax.persistence.Column(name = "image_id", nullable = false, precision = 19)
	@Override
	public java.lang.Long getImageId() {
		return (java.lang.Long) getValue(1);
	}

	/**
	 * Setter for <code>dstack.image_storage_pool_map.storage_pool_id</code>.
	 */
	@Override
	public void setStoragePoolId(java.lang.Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>dstack.image_storage_pool_map.storage_pool_id</code>.
	 */
	@javax.persistence.Column(name = "storage_pool_id", nullable = false, precision = 19)
	@Override
	public java.lang.Long getStoragePoolId() {
		return (java.lang.Long) getValue(2);
	}

	/**
	 * Setter for <code>dstack.image_storage_pool_map.state</code>.
	 */
	@Override
	public void setState(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>dstack.image_storage_pool_map.state</code>.
	 */
	@javax.persistence.Column(name = "state", nullable = false, length = 255)
	@Override
	public java.lang.String getState() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>dstack.image_storage_pool_map.uri</code>.
	 */
	@Override
	public void setUri(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>dstack.image_storage_pool_map.uri</code>.
	 */
	@javax.persistence.Column(name = "uri", length = 255)
	@Override
	public java.lang.String getUri() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>dstack.image_storage_pool_map.created</code>.
	 */
	@Override
	public void setCreated(java.util.Date value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>dstack.image_storage_pool_map.created</code>.
	 */
	@javax.persistence.Column(name = "created")
	@Override
	public java.util.Date getCreated() {
		return (java.util.Date) getValue(5);
	}

	/**
	 * Setter for <code>dstack.image_storage_pool_map.removed</code>.
	 */
	@Override
	public void setRemoved(java.util.Date value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>dstack.image_storage_pool_map.removed</code>.
	 */
	@javax.persistence.Column(name = "removed")
	@Override
	public java.util.Date getRemoved() {
		return (java.util.Date) getValue(6);
	}

	/**
	 * Setter for <code>dstack.image_storage_pool_map.remove_time</code>.
	 */
	@Override
	public void setRemoveTime(java.util.Date value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>dstack.image_storage_pool_map.remove_time</code>.
	 */
	@javax.persistence.Column(name = "remove_time")
	@Override
	public java.util.Date getRemoveTime() {
		return (java.util.Date) getValue(7);
	}

	/**
	 * Setter for <code>dstack.image_storage_pool_map.remove_locked</code>.
	 */
	@Override
	public void setRemoveLocked(java.lang.Boolean value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>dstack.image_storage_pool_map.remove_locked</code>.
	 */
	@javax.persistence.Column(name = "remove_locked", nullable = false, precision = 1)
	@Override
	public java.lang.Boolean getRemoveLocked() {
		return (java.lang.Boolean) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.Long, java.lang.Long, java.lang.Long, java.lang.String, java.lang.String, java.util.Date, java.util.Date, java.util.Date, java.lang.Boolean> fieldsRow() {
		return (org.jooq.Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.Long, java.lang.Long, java.lang.Long, java.lang.String, java.lang.String, java.util.Date, java.util.Date, java.util.Date, java.lang.Boolean> valuesRow() {
		return (org.jooq.Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field2() {
		return io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.IMAGE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field3() {
		return io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.STORAGE_POOL_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.STATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.URI;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.Date> field6() {
		return io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.CREATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.Date> field7() {
		return io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.REMOVED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.Date> field8() {
		return io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.REMOVE_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field9() {
		return io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.REMOVE_LOCKED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value2() {
		return getImageId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value3() {
		return getStoragePoolId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getState();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getUri();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.Date value6() {
		return getCreated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.Date value7() {
		return getRemoved();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.Date value8() {
		return getRemoveTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value9() {
		return getRemoveLocked();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImageStoragePoolMapRecord value1(java.lang.Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImageStoragePoolMapRecord value2(java.lang.Long value) {
		setImageId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImageStoragePoolMapRecord value3(java.lang.Long value) {
		setStoragePoolId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImageStoragePoolMapRecord value4(java.lang.String value) {
		setState(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImageStoragePoolMapRecord value5(java.lang.String value) {
		setUri(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImageStoragePoolMapRecord value6(java.util.Date value) {
		setCreated(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImageStoragePoolMapRecord value7(java.util.Date value) {
		setRemoved(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImageStoragePoolMapRecord value8(java.util.Date value) {
		setRemoveTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImageStoragePoolMapRecord value9(java.lang.Boolean value) {
		setRemoveLocked(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ImageStoragePoolMapRecord values(java.lang.Long value1, java.lang.Long value2, java.lang.Long value3, java.lang.String value4, java.lang.String value5, java.util.Date value6, java.util.Date value7, java.util.Date value8, java.lang.Boolean value9) {
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(io.github.ibuildthecloud.dstack.core.model.ImageStoragePoolMap from) {
		setId(from.getId());
		setImageId(from.getImageId());
		setStoragePoolId(from.getStoragePoolId());
		setState(from.getState());
		setUri(from.getUri());
		setCreated(from.getCreated());
		setRemoved(from.getRemoved());
		setRemoveTime(from.getRemoveTime());
		setRemoveLocked(from.getRemoveLocked());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends io.github.ibuildthecloud.dstack.core.model.ImageStoragePoolMap> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ImageStoragePoolMapRecord
	 */
	public ImageStoragePoolMapRecord() {
		super(io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP);
	}

	/**
	 * Create a detached, initialised ImageStoragePoolMapRecord
	 */
	public ImageStoragePoolMapRecord(java.lang.Long id, java.lang.Long imageId, java.lang.Long storagePoolId, java.lang.String state, java.lang.String uri, java.util.Date created, java.util.Date removed, java.util.Date removeTime, java.lang.Boolean removeLocked) {
		super(io.github.ibuildthecloud.dstack.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP);

		setValue(0, id);
		setValue(1, imageId);
		setValue(2, storagePoolId);
		setValue(3, state);
		setValue(4, uri);
		setValue(5, created);
		setValue(6, removed);
		setValue(7, removeTime);
		setValue(8, removeLocked);
	}
}
