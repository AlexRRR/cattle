/**
 * This class is generated by jOOQ
 */
package io.github.ibuildthecloud.dstack.core.model.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "storage_pool", schema = "dstack")
public class StoragePoolRecord extends org.jooq.impl.UpdatableRecordImpl<io.github.ibuildthecloud.dstack.core.model.tables.records.StoragePoolRecord> implements io.github.ibuildthecloud.dstack.db.jooq.utils.TableRecordJaxb, org.jooq.Record13<java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.Long, java.lang.Long, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.Boolean>, io.github.ibuildthecloud.dstack.core.model.StoragePool {

	private static final long serialVersionUID = 1769593634;

	/**
	 * Setter for <code>dstack.storage_pool.id</code>. 
	 */
	@Override
	public void setId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>dstack.storage_pool.id</code>. 
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "id", unique = true, nullable = false, precision = 19)
	@Override
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>dstack.storage_pool.uuid</code>. 
	 */
	@Override
	public void setUuid(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>dstack.storage_pool.uuid</code>. 
	 */
	@javax.persistence.Column(name = "uuid", nullable = false, length = 255)
	@Override
	public java.lang.String getUuid() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>dstack.storage_pool.name</code>. 
	 */
	@Override
	public void setName(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>dstack.storage_pool.name</code>. 
	 */
	@javax.persistence.Column(name = "name", length = 255)
	@Override
	public java.lang.String getName() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>dstack.storage_pool.description</code>. 
	 */
	@Override
	public void setDescription(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>dstack.storage_pool.description</code>. 
	 */
	@javax.persistence.Column(name = "description", length = 1024)
	@Override
	public java.lang.String getDescription() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>dstack.storage_pool.kind</code>. 
	 */
	@Override
	public void setKind(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>dstack.storage_pool.kind</code>. 
	 */
	@javax.persistence.Column(name = "kind", nullable = false, length = 255)
	@Override
	public java.lang.String getKind() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>dstack.storage_pool.state</code>. 
	 */
	@Override
	public void setState(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>dstack.storage_pool.state</code>. 
	 */
	@javax.persistence.Column(name = "state", nullable = false, length = 255)
	@Override
	public java.lang.String getState() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>dstack.storage_pool.physical_total_bytes</code>. 
	 */
	@Override
	public void setPhysicalTotalBytes(java.lang.Long value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>dstack.storage_pool.physical_total_bytes</code>. 
	 */
	@javax.persistence.Column(name = "physical_total_bytes", precision = 19)
	@Override
	public java.lang.Long getPhysicalTotalBytes() {
		return (java.lang.Long) getValue(6);
	}

	/**
	 * Setter for <code>dstack.storage_pool.physical_used_bytes</code>. 
	 */
	@Override
	public void setPhysicalUsedBytes(java.lang.Long value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>dstack.storage_pool.physical_used_bytes</code>. 
	 */
	@javax.persistence.Column(name = "physical_used_bytes", precision = 19)
	@Override
	public java.lang.Long getPhysicalUsedBytes() {
		return (java.lang.Long) getValue(7);
	}

	/**
	 * Setter for <code>dstack.storage_pool.virtual_total_bytes</code>. 
	 */
	@Override
	public void setVirtualTotalBytes(java.lang.Long value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>dstack.storage_pool.virtual_total_bytes</code>. 
	 */
	@javax.persistence.Column(name = "virtual_total_bytes", precision = 19)
	@Override
	public java.lang.Long getVirtualTotalBytes() {
		return (java.lang.Long) getValue(8);
	}

	/**
	 * Setter for <code>dstack.storage_pool.created</code>. 
	 */
	@Override
	public void setCreated(java.sql.Timestamp value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>dstack.storage_pool.created</code>. 
	 */
	@javax.persistence.Column(name = "created", nullable = false)
	@Override
	public java.sql.Timestamp getCreated() {
		return (java.sql.Timestamp) getValue(9);
	}

	/**
	 * Setter for <code>dstack.storage_pool.removed</code>. 
	 */
	@Override
	public void setRemoved(java.sql.Timestamp value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>dstack.storage_pool.removed</code>. 
	 */
	@javax.persistence.Column(name = "removed")
	@Override
	public java.sql.Timestamp getRemoved() {
		return (java.sql.Timestamp) getValue(10);
	}

	/**
	 * Setter for <code>dstack.storage_pool.agent_id</code>. 
	 */
	@Override
	public void setAgentId(java.lang.Long value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>dstack.storage_pool.agent_id</code>. 
	 */
	@javax.persistence.Column(name = "agent_id", precision = 19)
	@Override
	public java.lang.Long getAgentId() {
		return (java.lang.Long) getValue(11);
	}

	/**
	 * Setter for <code>dstack.storage_pool.external</code>. 
	 */
	@Override
	public void setExternal(java.lang.Boolean value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>dstack.storage_pool.external</code>. 
	 */
	@javax.persistence.Column(name = "external", nullable = false, precision = 1)
	@Override
	public java.lang.Boolean getExternal() {
		return (java.lang.Boolean) getValue(12);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record13 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row13<java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.Long, java.lang.Long, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.Boolean> fieldsRow() {
		return (org.jooq.Row13) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row13<java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.Long, java.lang.Long, java.sql.Timestamp, java.sql.Timestamp, java.lang.Long, java.lang.Boolean> valuesRow() {
		return (org.jooq.Row13) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.UUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.KIND;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.STATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field7() {
		return io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.PHYSICAL_TOTAL_BYTES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field8() {
		return io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.PHYSICAL_USED_BYTES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field9() {
		return io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.VIRTUAL_TOTAL_BYTES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field10() {
		return io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.CREATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field11() {
		return io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.REMOVED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field12() {
		return io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.AGENT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field13() {
		return io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL.EXTERNAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getUuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getKind();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getState();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value7() {
		return getPhysicalTotalBytes();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value8() {
		return getPhysicalUsedBytes();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value9() {
		return getVirtualTotalBytes();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value10() {
		return getCreated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value11() {
		return getRemoved();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value12() {
		return getAgentId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value13() {
		return getExternal();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoragePoolRecord value1(java.lang.Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoragePoolRecord value2(java.lang.String value) {
		setUuid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoragePoolRecord value3(java.lang.String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoragePoolRecord value4(java.lang.String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoragePoolRecord value5(java.lang.String value) {
		setKind(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoragePoolRecord value6(java.lang.String value) {
		setState(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoragePoolRecord value7(java.lang.Long value) {
		setPhysicalTotalBytes(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoragePoolRecord value8(java.lang.Long value) {
		setPhysicalUsedBytes(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoragePoolRecord value9(java.lang.Long value) {
		setVirtualTotalBytes(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoragePoolRecord value10(java.sql.Timestamp value) {
		setCreated(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoragePoolRecord value11(java.sql.Timestamp value) {
		setRemoved(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoragePoolRecord value12(java.lang.Long value) {
		setAgentId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoragePoolRecord value13(java.lang.Boolean value) {
		setExternal(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoragePoolRecord values(java.lang.Long value1, java.lang.String value2, java.lang.String value3, java.lang.String value4, java.lang.String value5, java.lang.String value6, java.lang.Long value7, java.lang.Long value8, java.lang.Long value9, java.sql.Timestamp value10, java.sql.Timestamp value11, java.lang.Long value12, java.lang.Boolean value13) {
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(io.github.ibuildthecloud.dstack.core.model.StoragePool from) {
		setId(from.getId());
		setUuid(from.getUuid());
		setName(from.getName());
		setDescription(from.getDescription());
		setKind(from.getKind());
		setState(from.getState());
		setPhysicalTotalBytes(from.getPhysicalTotalBytes());
		setPhysicalUsedBytes(from.getPhysicalUsedBytes());
		setVirtualTotalBytes(from.getVirtualTotalBytes());
		setCreated(from.getCreated());
		setRemoved(from.getRemoved());
		setAgentId(from.getAgentId());
		setExternal(from.getExternal());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends io.github.ibuildthecloud.dstack.core.model.StoragePool> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached StoragePoolRecord
	 */
	public StoragePoolRecord() {
		super(io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL);
	}

	/**
	 * Create a detached, initialised StoragePoolRecord
	 */
	public StoragePoolRecord(java.lang.Long id, java.lang.String uuid, java.lang.String name, java.lang.String description, java.lang.String kind, java.lang.String state, java.lang.Long physicalTotalBytes, java.lang.Long physicalUsedBytes, java.lang.Long virtualTotalBytes, java.sql.Timestamp created, java.sql.Timestamp removed, java.lang.Long agentId, java.lang.Boolean external) {
		super(io.github.ibuildthecloud.dstack.core.model.tables.StoragePoolTable.STORAGE_POOL);

		setValue(0, id);
		setValue(1, uuid);
		setValue(2, name);
		setValue(3, description);
		setValue(4, kind);
		setValue(5, state);
		setValue(6, physicalTotalBytes);
		setValue(7, physicalUsedBytes);
		setValue(8, virtualTotalBytes);
		setValue(9, created);
		setValue(10, removed);
		setValue(11, agentId);
		setValue(12, external);
	}
}
