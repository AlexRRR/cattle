<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:extension="http://dstack.io/schemas/spring/extension"
    xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://dstack.io/schemas/spring/extension http://dstack.io/schemas/spring/extension-1.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <bean class="io.github.ibuildthecloud.dstack.iaas.api.manager.DataManager" />
    <bean class="io.github.ibuildthecloud.dstack.iaas.api.filter.agent.AgentFilter" />
    <bean class="io.github.ibuildthecloud.dstack.iaas.api.filter.container.ContainerFilter" />

    <bean class="io.github.ibuildthecloud.dstack.iaas.api.object.postinit.AccountFieldPostInitHandler" />

    <bean class="io.github.ibuildthecloud.dstack.iaas.api.auth.dao.impl.AuthDaoImpl" />

    <!-- Start Handlers -->
    <bean class="io.github.ibuildthecloud.dstack.iaas.api.auth.impl.ApiAuthenticator" >
        <property name="accountLookup">
            <bean class="io.github.ibuildthecloud.dstack.iaas.api.auth.impl.BasicAuthImpl" />
        </property>
        <property name="authorizationProviders" value="#{extensionManager.list('authorization.provider')}" />
    </bean>
    <bean class="io.github.ibuildthecloud.dstack.api.handler.AddClientIpHeader" />
    <bean class="io.github.ibuildthecloud.dstack.iaas.api.request.handler.IdFormatterRequestHandler" >
        <property name="plainFormatter">
            <bean class="io.github.ibuildthecloud.gdapi.id.IdentityFormatter" />
        </property>
    </bean>
    <bean class="io.github.ibuildthecloud.gdapi.request.handler.CSRFCookieHandler" />
    <bean class="io.github.ibuildthecloud.dstack.iaas.api.request.handler.PostChildLinkHandler" />
    <bean class="io.github.ibuildthecloud.gdapi.request.handler.BodyParserRequestHandler" />
    <bean class="io.github.ibuildthecloud.gdapi.request.handler.ParseCollectionAttributes" />
    <bean class="io.github.ibuildthecloud.dstack.iaas.api.request.handler.UIRedirect" />
    <bean class="io.github.ibuildthecloud.gdapi.request.handler.VersionsHandler" />
    <bean class="io.github.ibuildthecloud.gdapi.request.handler.VersionHandler" />
    <bean class="io.github.ibuildthecloud.gdapi.request.handler.SchemasHandler" />
    <bean class="io.github.ibuildthecloud.gdapi.validation.ValidationHandler" >
        <property name="referenceValidator" >
            <bean class="io.github.ibuildthecloud.gdapi.validation.ResourceManagerReferenceValidator" />
        </property>
    </bean>
    <bean id="ResourceManagerRequestHandler" class="io.github.ibuildthecloud.gdapi.request.handler.write.ReadWriteApiHandler" >
        <property name="delegate">
            <bean class="io.github.ibuildthecloud.gdapi.request.handler.write.DefaultReadWriteApiDelegate" >
                <property name="handlers">
                    <list>
                        <bean id="InnerResourceManagerRequestHandler" class="io.github.ibuildthecloud.gdapi.request.handler.ResourceManagerRequestHandler" />
                    </list>
                </property>
            </bean>
        </property>
    </bean>
    <bean class="io.github.ibuildthecloud.gdapi.request.handler.NotFoundHandler" />
    <bean class="io.github.ibuildthecloud.dstack.api.handler.EventNotificationHandler" />
    <bean class="io.github.ibuildthecloud.gdapi.response.ResponseObjectConverter" />
    <bean class="io.github.ibuildthecloud.gdapi.request.handler.ExceptionHandler" >
        <property name="standardErrorCodes">
            <util:properties location="classpath:api/messages.properties" />
        </property>
        <property name="messageLocation" value="api/messages" />
    </bean>
    <bean class="io.github.ibuildthecloud.gdapi.response.JsonResponseWriter" />
    <bean class="io.github.ibuildthecloud.gdapi.response.HtmlResponseWriter" >
        <property name="jsonMapper">
            <bean class="io.github.ibuildthecloud.gdapi.json.JacksonMapper" >
                <property name="escapeForwardSlashes" value="true" />
            </bean>
        </property>
    </bean>
    <bean class="io.github.ibuildthecloud.dstack.api.handler.DeferredActionsHandler" />
    <!-- End Handlers -->

    <bean class="io.github.ibuildthecloud.dstack.iaas.api.auth.impl.DefaultAuthorizationProvider" >
        <property name="schemaFactoryList" value="#{extensionManager.list('schema.factory')}" />
    </bean>
    <bean class="io.github.ibuildthecloud.dstack.iaas.api.auth.impl.AgentAuthorizationProvider" />
    <bean class="io.github.ibuildthecloud.dstack.iaas.api.auth.AchaiusPolicyOptionsFactory" />
    <bean class="io.github.ibuildthecloud.dstack.iaas.api.change.impl.ResourceChangeEventListenerImpl" />
    <bean class="io.github.ibuildthecloud.dstack.iaas.api.change.impl.ResourceChangeEventProcessor" />

    <bean id="DocTypes" class="io.github.ibuildthecloud.dstack.object.meta.TypeSet" >
        <property name="typeClasses">
            <list>
                <value>io.github.ibuildthecloud.gdapi.doc.TypeDocumentation</value>
                <value>io.github.ibuildthecloud.gdapi.doc.FieldDocumentation</value>
            </list>
        </property>
    </bean>
    <bean class="io.github.ibuildthecloud.gdapi.doc.handler.DocumentationHandler" />
    <bean class="io.github.ibuildthecloud.dstack.schema.doc.DocumentationLoader" >
        <property name="resources">
            <bean class="io.github.ibuildthecloud.spring.resource.SpringUrlListFactory" >
                <property name="resources">
                    <list>
                        <value>schema/base/documentation.json</value>
                        <value>schema/base/documentation.json.d/**/*.json</value>
                    </list>
                </property>
            </bean>
        </property>
    </bean>

    <tx:advice id="ApiDelegateAdvice" transaction-manager="CoreTransactionManager">
        <tx:attributes>
            <!--
                Don't do read only transaction because it will keep a DB connection open for the
                entire web request, which is not good for /publish and /subscribe
                <tx:method name="read" isolation="READ_COMMITTED" read-only="true" /> 
            -->
            <tx:method name="write" isolation="READ_COMMITTED" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:advisor advice-ref="ApiDelegateAdvice" pointcut="execution(* io.github.ibuildthecloud.gdapi.request.handler.write.ReadWriteApiDelegate.*(..))" />
    </aop:config>

    <extension:discover class="io.github.ibuildthecloud.gdapi.factory.SchemaFactory"/>
    <extension:discover class="io.github.ibuildthecloud.dstack.iaas.api.auth.AuthorizationProvider"/>
    <extension:discover class="io.github.ibuildthecloud.api.pubsub.subscribe.ApiPubSubEventPostProcessor"/>

</beans>
