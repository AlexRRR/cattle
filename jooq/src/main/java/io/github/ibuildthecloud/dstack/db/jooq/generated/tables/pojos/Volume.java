/**
 * This class is generated by jOOQ
 */
package io.github.ibuildthecloud.dstack.db.jooq.generated.tables.pojos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "volume", schema = "dstack")
public class Volume implements io.github.ibuildthecloud.dstack.db.jooq.generated.model.Volume {

	private static final long serialVersionUID = -1486440905;

	private final java.lang.Long               id;
	private final java.lang.String             name;
	private final java.lang.String             description;
	private final java.lang.Long               accountId;
	private final java.lang.String             uuid;
	private final java.lang.String             state;
	private final java.lang.Long               physicalSizeBytes;
	private final java.lang.Long               virtualSizeBytes;
	private final java.lang.String             format;
	private final java.lang.Long               imageId;
	private final java.lang.Long               offeringId;
	private final java.lang.Integer            deviceNumber;
	private final java.lang.Long               instanceId;
	private final java.lang.Boolean            recreatable;
	private final java.lang.String             attachedState;
	private final java.lang.String             allocationState;
	private final java.sql.Timestamp           created;
	private final java.sql.Timestamp           removed;
	private final java.sql.Timestamp           removeTime;
	private final java.util.Map<String,Object> data;

	public Volume(
		java.lang.Long               id,
		java.lang.String             name,
		java.lang.String             description,
		java.lang.Long               accountId,
		java.lang.String             uuid,
		java.lang.String             state,
		java.lang.Long               physicalSizeBytes,
		java.lang.Long               virtualSizeBytes,
		java.lang.String             format,
		java.lang.Long               imageId,
		java.lang.Long               offeringId,
		java.lang.Integer            deviceNumber,
		java.lang.Long               instanceId,
		java.lang.Boolean            recreatable,
		java.lang.String             attachedState,
		java.lang.String             allocationState,
		java.sql.Timestamp           created,
		java.sql.Timestamp           removed,
		java.sql.Timestamp           removeTime,
		java.util.Map<String,Object> data
	) {
		this.id = id;
		this.name = name;
		this.description = description;
		this.accountId = accountId;
		this.uuid = uuid;
		this.state = state;
		this.physicalSizeBytes = physicalSizeBytes;
		this.virtualSizeBytes = virtualSizeBytes;
		this.format = format;
		this.imageId = imageId;
		this.offeringId = offeringId;
		this.deviceNumber = deviceNumber;
		this.instanceId = instanceId;
		this.recreatable = recreatable;
		this.attachedState = attachedState;
		this.allocationState = allocationState;
		this.created = created;
		this.removed = removed;
		this.removeTime = removeTime;
		this.data = data;
	}

	@javax.persistence.Id
	@javax.persistence.Column(name = "id", unique = true, nullable = false, precision = 19)
	@Override
	public java.lang.Long getId() {
		return this.id;
	}

	@javax.persistence.Column(name = "name", length = 255)
	@Override
	public java.lang.String getName() {
		return this.name;
	}

	@javax.persistence.Column(name = "description", length = 1024)
	@Override
	public java.lang.String getDescription() {
		return this.description;
	}

	@javax.persistence.Column(name = "account_id", nullable = false, precision = 19)
	@Override
	public java.lang.Long getAccountId() {
		return this.accountId;
	}

	@javax.persistence.Column(name = "uuid", nullable = false, length = 128)
	@Override
	public java.lang.String getUuid() {
		return this.uuid;
	}

	@javax.persistence.Column(name = "state", nullable = false, length = 255)
	@Override
	public java.lang.String getState() {
		return this.state;
	}

	@javax.persistence.Column(name = "physical_size_bytes", precision = 19)
	@Override
	public java.lang.Long getPhysicalSizeBytes() {
		return this.physicalSizeBytes;
	}

	@javax.persistence.Column(name = "virtual_size_bytes", precision = 19)
	@Override
	public java.lang.Long getVirtualSizeBytes() {
		return this.virtualSizeBytes;
	}

	@javax.persistence.Column(name = "format", length = 255)
	@Override
	public java.lang.String getFormat() {
		return this.format;
	}

	@javax.persistence.Column(name = "image_id", precision = 19)
	@Override
	public java.lang.Long getImageId() {
		return this.imageId;
	}

	@javax.persistence.Column(name = "offering_id", precision = 19)
	@Override
	public java.lang.Long getOfferingId() {
		return this.offeringId;
	}

	@javax.persistence.Column(name = "device_number", precision = 10)
	@Override
	public java.lang.Integer getDeviceNumber() {
		return this.deviceNumber;
	}

	@javax.persistence.Column(name = "instance_id", precision = 19)
	@Override
	public java.lang.Long getInstanceId() {
		return this.instanceId;
	}

	@javax.persistence.Column(name = "recreatable", nullable = false, precision = 1)
	@Override
	public java.lang.Boolean getRecreatable() {
		return this.recreatable;
	}

	@javax.persistence.Column(name = "attached_state", nullable = false, length = 255)
	@Override
	public java.lang.String getAttachedState() {
		return this.attachedState;
	}

	@javax.persistence.Column(name = "allocation_state", nullable = false, length = 255)
	@Override
	public java.lang.String getAllocationState() {
		return this.allocationState;
	}

	@javax.persistence.Column(name = "created")
	@Override
	public java.sql.Timestamp getCreated() {
		return this.created;
	}

	@javax.persistence.Column(name = "removed")
	@Override
	public java.sql.Timestamp getRemoved() {
		return this.removed;
	}

	@javax.persistence.Column(name = "remove_time")
	@Override
	public java.sql.Timestamp getRemoveTime() {
		return this.removeTime;
	}

	@javax.persistence.Column(name = "data", length = 16777215)
	@Override
	public java.util.Map<String,Object> getData() {
		return this.data;
	}
}
