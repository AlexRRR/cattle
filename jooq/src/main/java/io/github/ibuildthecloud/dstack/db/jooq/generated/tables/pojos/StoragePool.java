/**
 * This class is generated by jOOQ
 */
package io.github.ibuildthecloud.dstack.db.jooq.generated.tables.pojos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "storage_pool", schema = "dstack")
public class StoragePool implements io.github.ibuildthecloud.dstack.db.jooq.generated.model.StoragePool {

	private static final long serialVersionUID = -1183800681;

	private final java.lang.Long     id;
	private final java.lang.String   uuid;
	private final java.lang.String   name;
	private final java.lang.String   description;
	private final java.lang.String   kind;
	private final java.lang.String   contentType;
	private final java.lang.String   state;
	private final java.lang.Long     physicalTotalBytes;
	private final java.lang.Long     physicalUsedBytes;
	private final java.lang.Long     virtualTotalBytes;
	private final java.sql.Timestamp created;
	private final java.sql.Timestamp removed;

	public StoragePool(
		java.lang.Long     id,
		java.lang.String   uuid,
		java.lang.String   name,
		java.lang.String   description,
		java.lang.String   kind,
		java.lang.String   contentType,
		java.lang.String   state,
		java.lang.Long     physicalTotalBytes,
		java.lang.Long     physicalUsedBytes,
		java.lang.Long     virtualTotalBytes,
		java.sql.Timestamp created,
		java.sql.Timestamp removed
	) {
		this.id = id;
		this.uuid = uuid;
		this.name = name;
		this.description = description;
		this.kind = kind;
		this.contentType = contentType;
		this.state = state;
		this.physicalTotalBytes = physicalTotalBytes;
		this.physicalUsedBytes = physicalUsedBytes;
		this.virtualTotalBytes = virtualTotalBytes;
		this.created = created;
		this.removed = removed;
	}

	@javax.persistence.Id
	@javax.persistence.Column(name = "id", unique = true, nullable = false, precision = 19)
	@Override
	public java.lang.Long getId() {
		return this.id;
	}

	@javax.persistence.Column(name = "uuid", nullable = false, length = 255)
	@Override
	public java.lang.String getUuid() {
		return this.uuid;
	}

	@javax.persistence.Column(name = "name", length = 255)
	@Override
	public java.lang.String getName() {
		return this.name;
	}

	@javax.persistence.Column(name = "description", length = 1024)
	@Override
	public java.lang.String getDescription() {
		return this.description;
	}

	@javax.persistence.Column(name = "kind", nullable = false, length = 255)
	@Override
	public java.lang.String getKind() {
		return this.kind;
	}

	@javax.persistence.Column(name = "content_type", nullable = false, length = 255)
	@Override
	public java.lang.String getContentType() {
		return this.contentType;
	}

	@javax.persistence.Column(name = "state", nullable = false, length = 255)
	@Override
	public java.lang.String getState() {
		return this.state;
	}

	@javax.persistence.Column(name = "physical_total_bytes", precision = 19)
	@Override
	public java.lang.Long getPhysicalTotalBytes() {
		return this.physicalTotalBytes;
	}

	@javax.persistence.Column(name = "physical_used_bytes", precision = 19)
	@Override
	public java.lang.Long getPhysicalUsedBytes() {
		return this.physicalUsedBytes;
	}

	@javax.persistence.Column(name = "virtual_total_bytes", precision = 19)
	@Override
	public java.lang.Long getVirtualTotalBytes() {
		return this.virtualTotalBytes;
	}

	@javax.persistence.Column(name = "created", nullable = false)
	@Override
	public java.sql.Timestamp getCreated() {
		return this.created;
	}

	@javax.persistence.Column(name = "removed")
	@Override
	public java.sql.Timestamp getRemoved() {
		return this.removed;
	}
}
