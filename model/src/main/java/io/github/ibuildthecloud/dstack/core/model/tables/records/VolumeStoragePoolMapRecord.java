/**
 * This class is generated by jOOQ
 */
package io.github.ibuildthecloud.dstack.core.model.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "volume_storage_pool_map", schema = "dstack")
public class VolumeStoragePoolMapRecord extends org.jooq.impl.UpdatableRecordImpl<io.github.ibuildthecloud.dstack.core.model.tables.records.VolumeStoragePoolMapRecord> implements io.github.ibuildthecloud.dstack.db.jooq.utils.TableRecordJaxb, org.jooq.Record6<java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.String, java.sql.Timestamp>, io.github.ibuildthecloud.dstack.core.model.VolumeStoragePoolMap {

	private static final long serialVersionUID = -264878212;

	/**
	 * Setter for <code>dstack.volume_storage_pool_map.id</code>. 
	 */
	@Override
	public void setId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>dstack.volume_storage_pool_map.id</code>. 
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "id", unique = true, nullable = false, precision = 19)
	@Override
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>dstack.volume_storage_pool_map.volume_id</code>. 
	 */
	@Override
	public void setVolumeId(java.lang.Long value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>dstack.volume_storage_pool_map.volume_id</code>. 
	 */
	@javax.persistence.Column(name = "volume_id", nullable = false, precision = 19)
	@Override
	public java.lang.Long getVolumeId() {
		return (java.lang.Long) getValue(1);
	}

	/**
	 * Setter for <code>dstack.volume_storage_pool_map.storage_pool_id</code>. 
	 */
	@Override
	public void setStoragePoolId(java.lang.Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>dstack.volume_storage_pool_map.storage_pool_id</code>. 
	 */
	@javax.persistence.Column(name = "storage_pool_id", nullable = false, precision = 19)
	@Override
	public java.lang.Long getStoragePoolId() {
		return (java.lang.Long) getValue(2);
	}

	/**
	 * Setter for <code>dstack.volume_storage_pool_map.storage_pool_location</code>. 
	 */
	@Override
	public void setStoragePoolLocation(java.lang.Long value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>dstack.volume_storage_pool_map.storage_pool_location</code>. 
	 */
	@javax.persistence.Column(name = "storage_pool_location", precision = 19)
	@Override
	public java.lang.Long getStoragePoolLocation() {
		return (java.lang.Long) getValue(3);
	}

	/**
	 * Setter for <code>dstack.volume_storage_pool_map.state</code>. 
	 */
	@Override
	public void setState(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>dstack.volume_storage_pool_map.state</code>. 
	 */
	@javax.persistence.Column(name = "state", nullable = false, length = 128)
	@Override
	public java.lang.String getState() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>dstack.volume_storage_pool_map.removed</code>. 
	 */
	@Override
	public void setRemoved(java.sql.Timestamp value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>dstack.volume_storage_pool_map.removed</code>. 
	 */
	@javax.persistence.Column(name = "removed")
	@Override
	public java.sql.Timestamp getRemoved() {
		return (java.sql.Timestamp) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.String, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.String, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field2() {
		return io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.VOLUME_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field3() {
		return io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.STORAGE_POOL_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field4() {
		return io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.STORAGE_POOL_LOCATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.STATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field6() {
		return io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.REMOVED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value2() {
		return getVolumeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value3() {
		return getStoragePoolId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value4() {
		return getStoragePoolLocation();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getState();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value6() {
		return getRemoved();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(io.github.ibuildthecloud.dstack.core.model.VolumeStoragePoolMap from) {
		setId(from.getId());
		setVolumeId(from.getVolumeId());
		setStoragePoolId(from.getStoragePoolId());
		setStoragePoolLocation(from.getStoragePoolLocation());
		setState(from.getState());
		setRemoved(from.getRemoved());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends io.github.ibuildthecloud.dstack.core.model.VolumeStoragePoolMap> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached VolumeStoragePoolMapRecord
	 */
	public VolumeStoragePoolMapRecord() {
		super(io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP);
	}

	/**
	 * Create a detached, initialised VolumeStoragePoolMapRecord
	 */
	public VolumeStoragePoolMapRecord(java.lang.Long id, java.lang.Long volumeId, java.lang.Long storagePoolId, java.lang.Long storagePoolLocation, java.lang.String state, java.sql.Timestamp removed) {
		super(io.github.ibuildthecloud.dstack.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP);

		setValue(0, id);
		setValue(1, volumeId);
		setValue(2, storagePoolId);
		setValue(3, storagePoolLocation);
		setValue(4, state);
		setValue(5, removed);
	}
}
