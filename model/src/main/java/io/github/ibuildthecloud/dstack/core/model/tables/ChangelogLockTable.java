/**
 * This class is generated by jOOQ
 */
package io.github.ibuildthecloud.dstack.core.model.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChangelogLockTable extends org.jooq.impl.TableImpl<io.github.ibuildthecloud.dstack.core.model.tables.records.ChangelogLockRecord> {

	private static final long serialVersionUID = 301660175;

	/**
	 * The singleton instance of <code>dstack.changelog_lock</code>
	 */
	public static final io.github.ibuildthecloud.dstack.core.model.tables.ChangelogLockTable CHANGELOG_LOCK = new io.github.ibuildthecloud.dstack.core.model.tables.ChangelogLockTable();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<io.github.ibuildthecloud.dstack.core.model.tables.records.ChangelogLockRecord> getRecordType() {
		return io.github.ibuildthecloud.dstack.core.model.tables.records.ChangelogLockRecord.class;
	}

	/**
	 * The column <code>dstack.changelog_lock.ID</code>. 
	 */
	public final org.jooq.TableField<io.github.ibuildthecloud.dstack.core.model.tables.records.ChangelogLockRecord, java.lang.Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this);

	/**
	 * The column <code>dstack.changelog_lock.LOCKED</code>. 
	 */
	public final org.jooq.TableField<io.github.ibuildthecloud.dstack.core.model.tables.records.ChangelogLockRecord, java.lang.Boolean> LOCKED = createField("LOCKED", org.jooq.impl.SQLDataType.BIT.nullable(false), this);

	/**
	 * The column <code>dstack.changelog_lock.LOCKGRANTED</code>. 
	 */
	public final org.jooq.TableField<io.github.ibuildthecloud.dstack.core.model.tables.records.ChangelogLockRecord, java.sql.Timestamp> LOCKGRANTED = createField("LOCKGRANTED", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>dstack.changelog_lock.LOCKEDBY</code>. 
	 */
	public final org.jooq.TableField<io.github.ibuildthecloud.dstack.core.model.tables.records.ChangelogLockRecord, java.lang.String> LOCKEDBY = createField("LOCKEDBY", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * Create a <code>dstack.changelog_lock</code> table reference
	 */
	public ChangelogLockTable() {
		super("changelog_lock", io.github.ibuildthecloud.dstack.core.model.DstackTable.DSTACK);
	}

	/**
	 * Create an aliased <code>dstack.changelog_lock</code> table reference
	 */
	public ChangelogLockTable(java.lang.String alias) {
		super(alias, io.github.ibuildthecloud.dstack.core.model.DstackTable.DSTACK, io.github.ibuildthecloud.dstack.core.model.tables.ChangelogLockTable.CHANGELOG_LOCK);
	}

	private ChangelogLockTable(java.lang.String alias, org.jooq.Table<io.github.ibuildthecloud.dstack.core.model.tables.records.ChangelogLockRecord> aliased) {
		super(alias, io.github.ibuildthecloud.dstack.core.model.DstackTable.DSTACK, aliased);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ChangelogLockRecord> getPrimaryKey() {
		return io.github.ibuildthecloud.dstack.core.model.Keys.KEY_CHANGELOG_LOCK_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ChangelogLockRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<io.github.ibuildthecloud.dstack.core.model.tables.records.ChangelogLockRecord>>asList(io.github.ibuildthecloud.dstack.core.model.Keys.KEY_CHANGELOG_LOCK_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public io.github.ibuildthecloud.dstack.core.model.tables.ChangelogLockTable as(java.lang.String alias) {
		return new io.github.ibuildthecloud.dstack.core.model.tables.ChangelogLockTable(alias, this);
	}

	/**
	 * Rename this table
	 */
	public io.github.ibuildthecloud.dstack.core.model.tables.ChangelogLockTable rename(java.lang.String name) {
		return new io.github.ibuildthecloud.dstack.core.model.tables.ChangelogLockTable(name, null);
	}
}
